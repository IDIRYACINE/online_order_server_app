{"version":3,"sources":["Application/authentication/Authentication.ts","Application/store/Hooks.ts","Application/store/reducers/OrdersReducer.ts","Application/store/reducers/CategoryReducer.ts","Application/store/reducers/ProductsReducer.ts","Application/store/Store.ts","Infrastructure/api/ApiConfig.ts","Infrastructure/api/OrdersApi.ts","Domain/orders/Order.ts","Ui/components/order/OrderCard.tsx","Ui/pages/orders/OrdersBoard.tsx","Infrastructure/api/CategoryApi.ts","Ui/components/category/CategoryCard.tsx","Ui/pages/catalogue/Catalogue.tsx","Ui/components/auth/LoginForm.tsx","Ui/pages/authentication/Login.tsx","Application/attributesCacher/CacheHelper.ts","Ui/pages/category/CategoryEdit.tsx","Ui/components/forms/MainElementForm.tsx","Ui/pages/category/CategoryCreation.tsx","Infrastructure/api/ProductApi.ts","Ui/components/product/ProductCard.tsx","Ui/pages/catalogue/Category.tsx","Ui/components/forms/SizePriceListForm.tsx","Ui/pages/product/ProductCreator.tsx","Ui/pages/product/ProductEditor.tsx","Ui/components/navbar/SideNavBar.tsx","Ui/components/map/Map.tsx","Ui/pages/orders/OrderDetails.tsx","Infrastructure/databaseSynchroniser/DatabaseSynchroniser.ts","Ui/pages/settings/SettingsBoard.tsx","Ui/components/auth/PrivateRoutes.tsx","App.tsx","index.tsx"],"names":["openSocket","onConnect","useAppDispatch","useDispatch","useAppSelector","useSelector","ordersSlice","createSlice","name","initialState","orders","reducers","update","state","action","remove","payload","add","id","registerExtras","oldOrder","Object","objectSpread2","loadOrders","_ordersSlice$actions","actions","categorySlice","categories","createCategory","category","Id","removeCategory","updateCategory","newValues","updatedValues","oldCategory","loadCategory","forEach","value","_categorySlice$action","productsSlice","updateProduct","products","categoryKey","index","oldProduct","Index","product","removeProduct","splice","addProduct","length","push","loadProduct","Price","JSON","parse","Size","concat","registerCategory","_productsSlice$action","Store","configureStore","reducer","ProductsReducer","CategoryReducer","order","OrdersReducer","Host","FetchCategoryApi","UpdateCategoryApi","CreateCategoryApi","DeleteCategoryApi","FetchProductApi","UpdateProductApi","DeleteProductApi","CreateProductApi","FetchCustomerExtrasApi","SynchroniseDatabaseApi","AuthKey","isLoggedIn","Authentication","loginWithUsernameAndPassword","username","password","io","autoConnect","reconnection","extraHeaders","my-custom-header","query","on","dispatch","setOnConnectAction","_callee2","customerId","callbacks","regenerator_default","a","wrap","_context2","prev","next","axios","get","params","headers","X-Auth-key","then","onSuccess","catch","onFail","stop","OrderStatus","OrderCard","props","navigate","useNavigate","navigateToOrderDetails","loaded","replace","_x3","_x4","_getCustomerExtras","apply","this","arguments","getCustomerExtras","response","data","e","console","log","react_default","createElement","Card","className","Header","Body","Text","FullName","PhoneNumber","Button","variant","onClick","Footer","OrdersBoard","dummyIndex","dummyOrder","State","Pending","items","Email","BanStatus","Latitude","Longitude","Address","addOrder","entries","map","_ref","_ref2","slicedToArray","key","OrderCard_OrderCard","_callee","options","_context","post","_callee3","_context3","_callee4","_context4","CategoryCard","handleCategoryDeletion","_x7","_x8","_deleteCategory","deleteCategory","categoryId","error","Img","src","ImageUrl","Name","ProductCount","Row","Col","Catalogue","loadCategories","_x","_x2","_fetchCategory","fetchCategory","startIndex","count","LoginForm","email","Form","Group","Label","Control","placeholder","onChange","target","login","Login","onConnectCallback","Container","targetAttribute","attributesIndex","cachedAttributes","attributesList","Category","Set","Product","Description","CacheHelper","cacheAttribute","attribute","getCachedValues","toConsumableArray","setTargetAttributes","type","resetCache","CategoryEdit","useParams","_useState","useState","_useState2","setName","_useState3","_useState4","imageUrl","setImageUrl","saveChanges","_updateCategory","MainElementForm","Image","updateImageUrl","updateName","description","updateDescription","ButtonGroup","save","CategoryCreator","_x5","_x6","_createCategory","stringify","Content-Type","ProductCard","handleProductDelete","_deleteProduct","deleteProduct","productId","loadCategoryProducts","_fetchProduct","fetchProduct","element","SizePriceForm","price","updatePrice","size","updateSize","SizePriceListForm","sizePriceFormList","_","sizeList","priceList","removeSizePriceForm","addSize","ProductCreator","setSizePriceFormList","_createProduct","createProduct","filter","item","ProductEditor","parseInt","_useState5","_useState6","setPrice","_useState7","_useState8","setSize","_useState9","_useState10","_updateProduct","temp","NavigationBar","fluid","Navbar","bg","Nav","Link","as","to","render","status","style","height","MyMapComponent","center","zoom","ref","useRef","useEffect","window","google","maps","Map","current","MapComponent","index_umd","apiKey","OrderItemList","OrderItem","infos","quantity","OrderInfo","priceTotal","totalPriceCalc","OrderDetails","orderId","lat","lng","DatabaseSynchroniser","synchroniseDatabase","SettingsBoard","onSucess","PrivateRoutes","children","location","useLocation","react_router","from","App","path","CategoryEdit_CategoryEdit","rel","href","integrity","crossOrigin","ReactDOM","react_router_dom","es","store","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.43eaf77f.chunk.js","sourcesContent":["import io,{Socket} from \"socket.io-client\";\nimport {add,loadOrders} from \"../store/reducers/OrdersReducer\";\nimport {Store} from '../store/Store'\nimport {Host} from '../../Infrastructure/api/ApiConfig'\nimport {IAuthentication } from './IAuthentication'\n\nexport let AuthKey:string = 'idir'\n\nlet openSocket: Socket\nlet isLoggedIn : boolean = false\nlet onConnect : ()=>void\n\nfunction setUpSocket(){\n    openSocket.on(\"connect\",()=>{\n        isLoggedIn = true\n        onConnect()\n    })\n\n    openSocket.on(\"newOrder\" , (order)=>{\n        if (order !== null){\n            Store.dispatch(add(order))\n        }\n    })\n\n    openSocket.on(\"onConnectOrders\",(orders)=>{\n        Store.dispatch(loadOrders(orders))\n    })\n\n\n}\n\n\nfunction loginWithUsernameAndPassword (username : string,password : string){\n    //must enable autoconnect and headers on socket creation \n   //otherwise the connection cannot be esatblished\n   openSocket = io(Host ,{\n       autoConnect : true,\n       reconnection:false,\n       extraHeaders: {\n           \"my-custom-header\": \"abcd\"\n       },\n       query : {username : username , password :password}\n   })\n   setUpSocket()\n}\n\nfunction setOnConnectAction(action : ()=>void){\n    onConnect = action\n}\n\nexport const Authentication : IAuthentication = {\n    loginWithUsernameAndPassword: loginWithUsernameAndPassword,\n    setOnConnectAction: setOnConnectAction,\n    isLoggedIn: ()=>isLoggedIn\n}\n\n\n","import {TypedUseSelectorHook,useDispatch,useSelector} from 'react-redux'\nimport { AppDispatch, RootState } from './Store'\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector : TypedUseSelectorHook<RootState> = useSelector","import { createSlice } from \"@reduxjs/toolkit\";\nimport { Order } from \"../../../Domain/orders/Order\";\n\ntype OrderStatus = Order & {loaded:Boolean}\n\ntype RegisterExtrasAction = {\n    payload : {\n        id : string\n        Address : string,\n        Rating : string,\n        NegativeRating : string,\n        Latitude : number,\n        Longitude : number \n    \n    }\n}\n\ntype OrdersState = {\n    orders : Record<string,OrderStatus>\n}\n\nconst initialState : OrdersState = {\n    orders : {}\n}\n\nconst ordersSlice = createSlice({\n    name : 'orders',\n    initialState,\n    reducers : {\n        update(state , action){\n            \n        },\n        remove(state , action : {payload:string}){\n            delete state.orders[action.payload]\n            \n        },\n        add(state , action : {payload : OrderStatus}){\n            state.orders[action.payload.id] = action.payload\n        },\n        registerExtras(state , action:RegisterExtrasAction ){\n            const id = action.payload.id\n            const oldOrder = state.orders[id]\n            state.orders[id] = {...oldOrder , ...action.payload}\n        },\n        loadOrders(state , action:{payload :any}){\n            state.orders = action.payload\n        }\n    }\n} )\n\nexport const {update,remove,add,loadOrders,registerExtras} = ordersSlice.actions\n\nexport default ordersSlice.reducer\n","\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { Category } from \"../../../Domain/catalogue/Types\";\n\n\n\ntype ModifyAction = {payload:{category:Category}}\ntype UpdateAction = {payload:{oldCategory:Category,updatedValues:any}}\ntype LoadAction = {payload:{categories:Category[]}}\n\ntype CategoriesState = {\n    categories : Record<string,Category>\n    }\n\nconst initialState : CategoriesState = {\n    categories : {}\n}\n\nconst categorySlice = createSlice({\n    name : 'categories',\n    initialState,\n    reducers : {\n        createCategory(state,action:ModifyAction){\n            state.categories[action.payload.category.Id] = action.payload.category\n        },\n        removeCategory(state,action:ModifyAction){\n            delete state.categories[action.payload.category.Id]\n        },\n        updateCategory(state,action:UpdateAction){\n            const newValues = action.payload.updatedValues\n            const id = action.payload.oldCategory.Id\n            state.categories[id] = {...state.categories[id],...newValues}\n        },\n        loadCategory(state,action:LoadAction){\n            const categories : any = {}\n            action.payload.categories.forEach(value=>{\n                categories[value.Id] = value\n            })\n\n            state.categories = {...state.categories , ...categories}\n        }\n    }\n} )\n\nexport const {createCategory,updateCategory,removeCategory,loadCategory} = categorySlice.actions\n\nexport default categorySlice.reducer\n\n","\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { Category, Product } from \"../../../Domain/catalogue/Types\";\n\ntype ModifiedAction = {payload:{oldProduct:Product,categoryKey:string,updatedValues:any}}\ntype CreationAction = {payload:{product:Product,categoryKey:string}}\ntype LoadAction = {payload:{categoryKey:string,products:any}}\ntype RegisterAction = {payload : {categories:Category[]}}\ntype ProductsState = Record<string,Array<Product>>\n\nconst initialState : ProductsState = {}\nconst productsSlice = createSlice({\n    name : 'products',\n    initialState ,\n    reducers : {\n        updateProduct(state,action:ModifiedAction){\n            const products = state[action.payload.categoryKey]\n            const newValues = action.payload.updatedValues\n            const index = action.payload.oldProduct.Index\n            let product = products[index]\n            products[index] = {...product,...newValues}\n        },\n        removeProduct(state,action:CreationAction){\n            state[action.payload.categoryKey].splice(action.payload.product.Index)\n        },\n        addProduct(state,action:CreationAction){\n            const products = state[action.payload.categoryKey]\n            action.payload.product.Index = products.length\n            products.push(action.payload.product)\n        },\n        loadProduct(state,action:LoadAction){\n            const categoryKey = action.payload.categoryKey\n            let length = state[categoryKey].length\n            action.payload.products.forEach((value:any)=>{\n                value.Index = length\n                value.Price = JSON.parse(value.Price)\n                value.Size = JSON.parse(value.Size)\n                length++\n            })\n            state[categoryKey] = state[categoryKey].concat(action.payload.products)\n        },\n        registerCategory(state,action : RegisterAction){\n            action.payload.categories.forEach(value=>{\n                state[value.Id] = []\n            })\n            \n        }\n\n    }\n})\n\n\nexport const {addProduct,updateProduct,removeProduct,loadProduct,registerCategory} = productsSlice.actions\n\nexport default productsSlice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport CategoryReducer from './reducers/CategoryReducer'\nimport OrdersReducer from './reducers/OrdersReducer'\nimport ProductsReducer from './reducers/ProductsReducer'\n\nexport const Store = configureStore({\n  reducer: {\n    product : ProductsReducer,\n    category : CategoryReducer,\n    order : OrdersReducer,\n  },\n})\n\nexport type RootState = ReturnType<typeof Store.getState>\n\nexport type AppDispatch = typeof Store.dispatch","import { Category, Product } from \"../../Domain/catalogue/Types\"\n\n\nexport const Host = 'https://orsnodejs.herokuapp.com/'\n\nexport const FetchCategoryApi:string = Host+'FetchCategory'\nexport const UpdateCategoryApi:string = Host+'UpdateCategory'\nexport const CreateCategoryApi:string = Host+'CreateCategory'\nexport const DeleteCategoryApi:string = Host+'DeleteCategory'\n\nexport const FetchProductApi:string = Host+'FetchProduct'\nexport const UpdateProductApi:string = Host+'UpdateProduct'\nexport const DeleteProductApi:string = Host+'DeleteProduct'\nexport const CreateProductApi:string = Host+'CreateProduct'\n\nexport const FetchCustomerApi : string = Host+'GetCustomer'\nexport const FetchCustomerExtrasApi : string = Host+'GetCustomerExtras'\n\nexport const SynchroniseDatabaseApi:string = Host+'SynchroniseDatabase'\n\nexport type FetchOptions = {\n    startIndex : string,\n    count : string,\n    categoryId?:string\n}\n\nexport type DeleteOptions = {\n    categoryId : string,\n    productId? : string\n}\n\nexport type Attribute = {\n    name :string,\n    value : any\n}\n\nexport type AttributeMap = {}\n\nexport type UpdateOptions = {\n    categoryId : string,\n    productId? : string,\n    updatedValues : Attribute[]\n}\n\nexport type CreateProductOptions = {\n    product:Product,\n    categoryId:string\n}\n\nexport type CreateCategoryOptions = {\n    category :Category\n}\n\nexport type Callbacks = {\n    onSuccess(response?:any):void,\n    onFail(error?:any):void,\n}","//curl -d '{\"infos\":{\"Id\":\"f21\",\"FullName\":\"idiryacine\",\"PhoneNumber\":\"05\",\"Email\":\"gg\"}}' -H 'Content-Type:application/json' http://localhost:3001/RegisterCustomer\n\nimport axios from \"axios\";\nimport { AuthKey } from \"../../Application/authentication/Authentication\";\nimport { Callbacks, FetchCustomerApi, FetchCustomerExtrasApi } from \"./ApiConfig\";\n\n\nexport async function getCustomer(customerId:string , callbacks:Callbacks){\n    axios.get(FetchCustomerApi,\n        {\n        params:{id : customerId},\n        headers:{\"X-Auth-key\" : AuthKey}})\n        .then(callbacks.onSuccess)\n        .catch(callbacks.onFail)\n    }\n\n\nexport async function getCustomerExtras(customerId:string , callbacks:Callbacks){\n    axios.get(FetchCustomerExtrasApi,\n        {\n        params:{id : customerId},\n        headers:{\"X-Auth-key\" : AuthKey}})\n        .then(callbacks.onSuccess)\n        .catch(callbacks.onFail)\n    }\n","\nexport enum OrderStatus {\n    Pending\n}\n\nexport type Coordinates ={\n    lat : number,\n    lng : number\n}\n\nexport type ItemType = {\n    name : string,\n    size : string,\n    price : number,\n    quantity : number\n}/*\n{\n    id: 'f21',\n    FullName: 'idiryacine',\n    Email: 'gg',\n    PhoneNumber: '05',\n    BanStatus: 1,\n    Rating: 0,\n    NegativeRating: 0,\n    Latitude: 145,\n    Longitude: 200,\n    Address: 'Sonic',\n    items: [ [Object] ]\n  }*/\n\nexport type Order = {\n    id : string,\n    FullName : string,\n    State : OrderStatus,\n    PhoneNumber : string,\n    Email : string,\n    BanStatus : string,\n    items : Array<ItemType>,\n    Latitude : number,\n    Longitude : number,\n    Address : string\n\n}\n/*\n{id : f21,state :Pending,items : []}\n\n*/\n\n","import React from 'react';\nimport { Button, Card } from 'react-bootstrap';\nimport { useNavigate } from 'react-router';\nimport { getCustomerExtras } from '../../../Infrastructure/api/OrdersApi';\nimport { useAppDispatch, useAppSelector } from '../../../Application/store/Hooks';\nimport { registerExtras } from '../../../Application/store/reducers/OrdersReducer';\nimport './OrderCard.css'\n\nexport default function OrderCard(props : any){\n    const order = useAppSelector(state => state.order.orders[props.index])\n    const navigate = useNavigate()\n    const dispatch = useAppDispatch()\n\n    function navigateToOrderDetails(){\n        if(!order.loaded){\n            getCustomerExtras(\n                order.id,\n                {\n                    onSuccess:(response)=>{\n                        dispatch(registerExtras({\n                            ...response.data , loaded:true\n                        }))\n                        navigate(`/OrderDetails/${order.id}` , {replace:true})\n                    },\n                    onFail : (e)=>{\n                        console.log(e)\n                    }\n                }\n            )\n        }\n        else{\n            navigate(`/OrderDetails/${order.id}` , {replace:true})\n        }\n    }\n    \n    return (\n       <Card className=\"py-2 px-2\">\n           <Card.Header>Order#{order.id}</Card.Header>\n           <Card.Body>\n               <Card.Text>Customer Name : {order.FullName}</Card.Text>\n               <Card.Text>PhoneNumber : {order.PhoneNumber}</Card.Text>\n               <Button variant=\"primary\" onClick={()=>{navigateToOrderDetails()}}>Full Details</Button>\n               <Card.Footer className=\"text-muted\">Sent At : 12:35 </Card.Footer>\n           </Card.Body>\n       </Card>\n    )\n    \n}","import React from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../../Application/store/Hooks\";\nimport OrderCard from '../../components/order/OrderCard'\n\nimport {add, remove} from '../../../Application/store/reducers/OrdersReducer'\nimport { OrderStatus } from \"../../../Domain/orders/Order\";\n\nlet dummyIndex = -1\n\nexport default function OrdersBoard() {\n    const orders  = useAppSelector(state => state.order.orders)\n    const dispatch = useAppDispatch()\n    \n    function addOrder(){\n        dummyIndex++\n        let dummyOrder = {\n            id : \"f21\",\n            State : OrderStatus.Pending,\n            items : [],\n            PhoneNumber : \"052222\",\n            Email : \"idir@gmail\",\n            BanStatus : \"Normal\",\n            FullName : 'idir',\n            Latitude:2,\n            Longitude:3,\n            Address : 'bba',\n            loaded:false\n        }\n\n       dispatch(add(dummyOrder))\n    }\n\n    function deleteOrder(key : string){\n       dispatch(remove(key))\n    }\n\n    return (\n        <div className=\"OrdersList\">\n            <p>OrdersList</p>\n\n            <button onClick={() =>{addOrder()}} >Add</button>\n\n            <button onClick={()=>{deleteOrder(\"f21\")}}>Remove</button>\n\n            {Object.entries(orders).map(([key,value])=>{\n                return <OrderCard key={'#'+value.id} index={key} ></OrderCard>\n            })}\n\n        </div>    \n    )\n    \n}\n","import { FetchCategoryApi,CreateCategoryApi,UpdateCategoryApi,DeleteCategoryApi, CreateCategoryOptions, FetchOptions, UpdateOptions, DeleteOptions, Callbacks } from \"./ApiConfig\"\nimport axios from \"axios\"\nimport{AuthKey} from '../../Application/authentication/Authentication'\n\nexport async function fetchCategory(options:FetchOptions,callbacks:Callbacks){\n    axios.get(FetchCategoryApi,\n        {\n        params:{...options},\n        headers:{\"X-Auth-key\" : AuthKey}})\n        .then(callbacks.onSuccess)\n        .catch(callbacks.onFail)\n    }\n\nexport async function updateCategory(options:UpdateOptions,callbacks:Callbacks){\n    axios.post(UpdateCategoryApi,\n        {options:options},\n        {headers:{\"X-Auth-key\" : AuthKey}})\n        .then(callbacks.onSuccess)\n        .catch(callbacks.onFail)\n    }\n\nexport async function createCategory(options:CreateCategoryOptions,callbacks:Callbacks){\n    axios.post(CreateCategoryApi,{options})\n    .then(callbacks.onSuccess)\n    .catch(callbacks.onFail)\n}\n\nexport async function deleteCategory(options:DeleteOptions,callbacks:Callbacks){\n    axios.get(DeleteCategoryApi,\n        {\n            params:{...options},\n            headers:{\"X-Auth-key\" : AuthKey}\n    })\n    .then(callbacks.onSuccess)\n    .catch(callbacks.onFail)\n}","import React from 'react'\nimport Button from 'react-bootstrap/esm/Button'\nimport Card from 'react-bootstrap/esm/Card'\nimport Col from 'react-bootstrap/esm/Col'\nimport Row from 'react-bootstrap/esm/Row'\nimport { useNavigate } from 'react-router-dom'\nimport { deleteCategory } from '../../../Infrastructure/api/CategoryApi'\nimport { useAppDispatch, useAppSelector } from '../../../Application/store/Hooks'\nimport { removeCategory, } from '../../../Application/store/reducers/CategoryReducer'\n\nexport default function CategoryCard(props : any) {\n    const category = useAppSelector(state => state.category.categories[props.id])    \n    const navigate = useNavigate()\n    const dispatch = useAppDispatch()\n\n    function handleCategoryEdit(){\n        navigate(`/EditCategory/${props.id}`,{replace:true})\n    }\n\n    function handleCategoryDeletion(){\n        deleteCategory({\n            categoryId : category.Id\n        },\n        {\n            onSuccess :()=>{\n                dispatch(removeCategory({category:category}))\n            },\n            onFail : (error)=>{\n                console.log(error)\n            }\n        })\n    }\n\n    function handleCategoryExploration(){\n        navigate(`/Category/${props.id}`,{replace:true})\n    }\n\n    return (\n        <Card className=\"py-5 px-5\">\n            <Card.Img variant=\"top\" src ={category.ImageUrl}/>\n            <Card.Text>{category.Name}</Card.Text>\n            <Card.Text>{category.ProductCount}</Card.Text>\n            <Row className=\"g-3\">\n                <Col className=\"col-sm\"><Button variant=\"primary\" onClick={()=>{handleCategoryDeletion()}}>Delete</Button></Col>\n                <Col className=\"col-sm\"><Button variant=\"primary\" onClick={()=>{handleCategoryEdit()}}>Edit</Button></Col>\n                <Col className=\"col-sm\"><Button variant=\"primary\" onClick={()=>{handleCategoryExploration()}}>Explore</Button></Col>\n            </Row>\n        </Card>\n   \n    )\n\n}","import React from 'react'\nimport {useNavigate } from 'react-router-dom'\nimport CategoryCard from '../../components/category/CategoryCard'\nimport {useAppDispatch, useAppSelector } from '../../../Application/store/Hooks'\nimport { fetchCategory } from '../../../Infrastructure/api/CategoryApi'\nimport { loadCategory } from '../../../Application/store/reducers/CategoryReducer'\nimport { registerCategory } from '../../../Application/store/reducers/ProductsReducer'\n\n\nexport default function Catalogue(){\n    const categories = useAppSelector(state => state.category.categories)\n    const dispatch = useAppDispatch()\n    const navigate = useNavigate()\n\n    function navigateToCategoryCreation(){\n        navigate(\"/CreateCategory\",{replace:true})\n    }\n\n    \n\n    function loadCategories(){\n        fetchCategory({startIndex:\"0\",count:\"2\"},\n        {\n            onSuccess:(response)=>{\n                dispatch(loadCategory({categories:response.data}))\n                dispatch(registerCategory({categories:response.data}))\n            },\n            onFail :(error)=>{console.log(\"failed\")}\n        })\n    }\n\n    return (\n        <div className='Catalogue'>\n            <button className='CreateCategoryButton' onClick={()=>{navigateToCategoryCreation()}}>New Category</button>\n            <button className='CreateCategoryButton' onClick={()=>{loadCategories()}}>Load Categories</button>\n\n            {\n                Object.entries(categories).map(([key,value])=>{\n                    return <CategoryCard key={key} data={value} id={key}></CategoryCard>\n                })\n            }\n\n        </div>\n    )\n}","import React from \"react\";\nimport Form from \"react-bootstrap/esm/Form\";\nimport Row from \"react-bootstrap/esm/Row\"\nimport Col from \"react-bootstrap/esm/Col\"\nimport Button from \"react-bootstrap/esm/Button\"\n\n\nexport default function LoginForm(props:any){\n    let email = ''\n    let password = ''\n\n    function updateEmail(value:string){\n        email = value\n    }\n    \n    function updatePassword(value:string){\n        password = value\n    }\n\n    return (\n        <Form className=\"px-5 py-5\" >    \n        <Form.Group>\n            <Row className=\"g-3\">\n                <Col className=\"col-sm-2\"><Form.Label>Email</Form.Label></Col>\n                <Col className=\"col-sm-8\"><Form.Control placeholder=\"example@something.com\" onChange={(e)=>updateEmail(e.target.value)}/></Col>\n            </Row>\n        </Form.Group>\n\n        <Form.Group>\n            <Row className=\"g-3\">\n                <Col className=\"col-sm-2\"><Form.Label>Password</Form.Label></Col>\n                <Col className=\"col-sm-8\"><Form.Control placeholder=\"Password\" onChange={(e)=>updatePassword(e.target.value)}></Form.Control></Col>\n            </Row>\n        </Form.Group>\n        \n        <Button className=\"py-3\" onClick={()=>{props.login(email,password)}}>Login</Button>\n    \n        </Form>\n    )\n}","import React from 'react'\nimport { Container, Form } from 'react-bootstrap'\nimport { useNavigate } from 'react-router-dom'\nimport LoginForm from '../../components/auth/LoginForm'\nimport {Authentication} from '../../../Application/authentication/Authentication'\n\nexport default function Login(){\n\n    let navigate = useNavigate()\n\n    function connect(username:string , password :string){\n        Authentication.setOnConnectAction(onConnectCallback)\n        Authentication.loginWithUsernameAndPassword(username,password)\n    }\n\n    function onConnectCallback(){\n        navigate('/Orders',{replace:true})\n    }\n\n    return (\n        <Container>\n          <LoginForm login={connect}></LoginForm>\n        </Container>\n    )\n}","import { Attribute } from \"../../Infrastructure/api/ApiConfig\"\nimport {ICacheHelper} from \"./ICacheHelper\"\n\nlet targetAttribute = 'Category'\nlet attributesIndex = 0 \nlet cachedAttributes : Array<Attribute> = []\n\nlet attributesList : any = {\n    'Category' : {\n        'Name' : {Set:false , Index : -1},\n        'ImageUrl': {Set:false , Index : -1},\n    },\n    'Product' : {\n        'Name' : {Set:false , Index : -1} ,\n        'ImageUrl' : {Set:false , Index : -1},\n        'Description' : {Set:false , Index : -1} ,\n        'Price' : {Set:false , Index : -1},\n        'Size' : {Set:false , Index : -1}\n    }\n}\n\nfunction cacheAttribute(name:string , value:any , index:number){\n    cachedAttributes[index] = {'name' : name , 'value' : value}\n}\n\n\nexport const CacheHelper : ICacheHelper = {\n    cacheAttribute: (name: string, value: any) => {\n        let attribute = attributesList[targetAttribute][name]\n        if(attribute.Set === false){\n            attribute.Index = attributesIndex\n            attributesIndex++\n            attribute.Set = true\n        }\n        cacheAttribute(name,value,attribute.Index)\n    },\n    getCachedValues: () => {\n        return [...cachedAttributes]\n    },\n    setTargetAttributes:(type: string)=> {\n        targetAttribute = type\n    },\n    resetCache : () => {\n        cachedAttributes = []\n        attributesIndex = 0\n        attributesList = {\n            'Category' : {\n                'Name' : {Set:false , Index : -1},\n                'ImageUrl': {Set:false , Index : -1},\n            },\n            'Product' : {\n                'Name' : {Set:false , Index : -1} ,\n                'ImageUrl' : {Set:false , Index : -1},\n                'Description' : {Set:false , Index : -1} ,\n                'Price' : {Set:false , Index : -1},\n                'Size' : {Set:false , Index : -1}\n            }\n    }\n    }\n}","import React, { useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { updateCategory } from '../../../Infrastructure/api/CategoryApi'\nimport {useAppDispatch,useAppSelector} from '../../../Application/store/Hooks'\nimport { updateCategory as update } from '../../../Application/store/reducers/CategoryReducer'\nimport '../../styles/Category/CategoryEdit.css'\nimport { CacheHelper } from '../../../Application/attributesCacher/CacheHelper'\n\n\nexport default function CategoryEdit(){\n    const params = useParams()\n    const category  = useAppSelector(state => state.category.categories[params.categoryId!])\n    const navigate = useNavigate()\n\n    const[name , setName] = useState(category.Name)\n    const[imageUrl , setImageUrl] = useState(category.ImageUrl)\n\n    const dispatch = useAppDispatch()\n    \n    function saveChanges (){\n        updateCategory({\n            categoryId : category.Id,\n            updatedValues : CacheHelper.getCachedValues()\n        },{\n            onSuccess : ()=>{\n                dispatch(update({oldCategory:category,updatedValues:CacheHelper.getCachedValues()}))\n                CacheHelper.resetCache()\n                navigate(\"/Catalogue\",{replace:true})\n            },\n            onFail:()=>{\n                CacheHelper.resetCache()\n                console.log(\"failed\")\n        }\n        })\n    }\n\n    function cancel (){\n\n    }\n\n    function handleNameChange(value:string){\n        CacheHelper.cacheAttribute(\"Name\",value)\n        setName(value)\n    }\n\n    function handleImageChange(value:string){\n        CacheHelper.cacheAttribute(\"ImageUrl\",value)\n        setImageUrl(value)\n    }\n\n\n    return (\n        <div className='CategoryEdit'>\n\n            <div className='Image'>\n                <img src={imageUrl} id='CategoryImage'></img>\n                <input id='CategoryImageUrl' value={imageUrl} onChange={e=>{handleImageChange(e.target.value)}}></input>\n            </div>\n\n            <div className='CategoryInfos'>\n                \n                <p id=\"CategoryNameLabel\">Category Name</p>\n                <input id=\"CategoryName\" value={name} onChange={e=>{handleNameChange(e.target.value)}}></input>\n\n                <p id=\"CategoryDescriptionLabel\">Description</p>\n                <input id=\"CategoryDescription\"></input>\n            </div>\n\n            <div className='Actions'>\n                <button id='SaveButton' onClick={()=>{saveChanges()}}>Save</button>\n\n                <button id='CancelButton' onClick={()=>{cancel()}}>Cancel</button>\n            </div>\n        </div>\n    )\n}","import React from \"react\"\nimport Button from \"react-bootstrap/esm/Button\"\nimport ButtonGroup from \"react-bootstrap/esm/ButtonGroup\"\nimport Form from \"react-bootstrap/esm/Form\"\nimport Image from \"react-bootstrap/esm/Image\"\nimport Row from \"react-bootstrap/esm/Row\"\nimport Col from \"react-bootstrap/esm/Col\"\n\n\nexport default function MainElementForm(props:any){\n    \n    return (\n        <Form className=\"px-5 py-5\" >    \n        <Form.Group>\n            <Row className=\"g-3\">\n                <Col className=\"col-sm-5\"><Image src={props.ImageUrl} /></Col>\n                <Col className=\"col-sm-5\"><Form.Control type=\"Url\" placeholder=\"Image Url\" value={props.ImageUrl} onChange={(e)=>{props.updateImageUrl(e.target.value)}}/></Col>\n            </Row>\n        </Form.Group>\n          \n        <Form.Group>\n            <Row className=\"g-3\">\n                <Col className=\"col-sm-2\"><Form.Label>Name</Form.Label></Col>\n                <Col className=\"col-sm-8\"><Form.Control placeholder=\"Name\" value={props.name} onChange={(e)=>props.updateName(e.target.value)}/></Col>\n            </Row>\n        </Form.Group>\n\n        <Form.Group>\n            <Row className=\"g-3\">\n                <Col className=\"col-sm-2\"><Form.Label>Description</Form.Label></Col>\n                <Col className=\"col-sm-8\"><Form.Control placeholder=\"Description\" value={props.description} onChange={(e)=>props.updateDescription(e.target.value)}></Form.Control></Col>\n            </Row>\n        </Form.Group>\n        <ButtonGroup className=\"py-3\">\n            <Button onClick={()=>{props.save()}}>Save</Button>\n        </ButtonGroup>\n        </Form>\n    )\n}","import React, { useState } from 'react'\nimport Button from 'react-bootstrap/esm/Button'\nimport Container from 'react-bootstrap/esm/Container'\nimport { useNavigate } from 'react-router-dom'\nimport { createCategory } from '../../../Infrastructure/api/CategoryApi'\nimport MainElementForm from '../../components/forms/MainElementForm'\nimport { Category } from '../../../Domain/catalogue/Types'\nimport '../../styles/Category/CategoryCreation.css'\n\n\nexport default function CategoryCreator(){\n    const navigate = useNavigate()\n    const[imageUrl , setImageUrl] = useState(\"https://static.remove.bg/remove-bg-web/a6eefcd21dff1bbc2448264c32f7b48d7380cb17/assets/start_remove-c851bdf8d3127a24e2d137a55b1b427378cd17385b01aec6e59d5d4b5f39d2ec.png\")\n\n    let name = 'idir'\n    let description = 'none'\n\n    function updateName(value:string){\n        name = value\n    }\n\n    function updateDescription(value:string){\n        description = value\n    }\n\n\n    function handleCategoryCreation() {\n        let category : Category = {\n            Id:name,\n            Name:name,\n            ImageUrl:imageUrl,\n            Index:-1,\n            ProductCount:0\n        }\n        createCategory(\n            {\n                category : category\n            },\n            {\n            onSuccess:()=>{navigate(\"/Catalogue\",{replace:true})},\n            onFail: ()=>{}\n        })\n        \n    }\n\n    function cancel (){\n        navigate(\"/Catalogue\",{replace:true})\n    }\n\n    return (\n        <Container className='bg-white'>\n            <MainElementForm updateImageUrl={setImageUrl} updateName={updateName} updateDescription={updateDescription} save={handleCategoryCreation}\n                ImageUrl={imageUrl}\n            />\n            <Button id='CancelButton' onClick={()=>{cancel()}}>Cancel</Button>\n\n       \n        </Container>\n            \n    )\n}","import {FetchProductApi,CreateProductApi,UpdateProductApi,DeleteProductApi, UpdateOptions, FetchOptions, CreateProductOptions, DeleteOptions, Callbacks } from \"./ApiConfig\"\nimport axios from \"axios\"\nimport{AuthKey} from '../../Application/authentication/Authentication'\n\n\nexport async function fetchProduct(options :FetchOptions,callbacks:Callbacks){\n    axios.get(\n        FetchProductApi,\n        {params:{...options},\n        headers:{\"X-Auth-key\" : AuthKey}\n    })\n    .then(callbacks.onSuccess)\n    .catch(callbacks.onFail)\n}\n\nexport async function updateProduct(options:UpdateOptions,callbacks:Callbacks){\n    axios.post(UpdateProductApi,{options:JSON.stringify(options)},\n        {\n            headers:{\n                'Content-Type': 'application/json',\n            \"X-Auth-key\" : AuthKey \n    }})\n    .then(callbacks.onSuccess)\n    .catch(callbacks.onFail)\n}\n\nexport async function createProduct(options:CreateProductOptions,callbacks:Callbacks){\n    axios.post(CreateProductApi,\n        {options:options},\n        {headers:{\"X-Auth-key\" : AuthKey}\n    })\n    .then(callbacks.onSuccess)\n    .catch(callbacks.onFail)\n}\n\nexport async function deleteProduct(options:DeleteOptions,callbacks:Callbacks){\n    axios.get(DeleteProductApi,\n        {\n            params:{...options},\n            headers:{\"X-Auth-key\" : AuthKey\n        }\n    })\n    .then(callbacks.onSuccess)\n    .catch(callbacks.onFail)\n}","import React from 'react'\nimport { Button, Card } from 'react-bootstrap'\nimport { useNavigate } from 'react-router-dom'\nimport { deleteProduct } from '../../../Infrastructure/api/ProductApi'\nimport { useAppDispatch, useAppSelector } from '../../../Application/store/Hooks'\nimport { removeProduct } from '../../../Application/store/reducers/ProductsReducer'\n\nexport default function ProductCard(props:any){\n    const product = useAppSelector(state => state.product[props.categoryId][props.index])\n    const dispatch = useAppDispatch()\n    const navigate =useNavigate()\n\n    function handleProductEdit(){\n        navigate(`/EditProduct/${props.categoryId}/${props.index}`,{replace:true})\n    }\n\n    function handleProductDelete(){\n        deleteProduct({\n            productId : product.Id,\n            categoryId : props.categoryId\n        },{\n            onSuccess : ()=>{dispatch(removeProduct({product:product,categoryKey:props.categoryId}))},\n            onFail : ()=>{console.log(\"fail\")}\n        })\n    }\n\n    return (\n        <Card>\n            <Card.Header>{product.Name}</Card.Header>\n            <Card.Body>\n                <Card.Img src={product.ImageUrl}/>\n                <Card.Text>Default Size : {product.Size[0]}</Card.Text>\n                <Card.Text>Price : {product.Price[0]}</Card.Text>\n                <Button onClick={()=>{handleProductEdit()}}>Edit</Button>\n                <Button onClick={()=>{handleProductDelete()}}>Delete</Button>\n            </Card.Body>\n        </Card>\n    )\n}","import React from 'react'\nimport {useNavigate, useParams } from 'react-router-dom'\nimport ProductCard from '../../components/product/ProductCard'\nimport {useAppDispatch, useAppSelector } from '../../../Application/store/Hooks'\nimport { fetchProduct } from '../../../Infrastructure/api/ProductApi'\nimport { loadProduct } from '../../../Application/store/reducers/ProductsReducer'\n\n\n\nexport default function Category(){\n    const params = useParams()\n    const products = useAppSelector(state => state.product[params.categoryId!])\n    const navigate = useNavigate()\n    const dispatch = useAppDispatch()\n\n    function navigateToProductCreation(){\n        navigate(`/CreateProduct/${ params.categoryId!}`,{replace:true})\n    }\n\n    function loadCategoryProducts(){\n        fetchProduct({\n            startIndex:\"0\",\n            count : \"2\",\n            categoryId : params.categoryId!\n        },{\n            onSuccess:(response)=>{dispatch(loadProduct({categoryKey:params.categoryId!,products:response.data}))},\n            onFail:(error)=>{console.log(error)}\n        })\n    }\n\n    return (\n        <div className='Category'>\n            <button className='CreateProductButton' onClick={()=>{navigateToProductCreation()}}>New Product</button>\n            <button className='LoadProductsButton' onClick={()=>{loadCategoryProducts()}}>Load Product</button>\n\n            {products.map((element,index) =>{ \n                return <ProductCard key={index} data={element} categoryId={params.categoryId!} index={index}></ProductCard>\n                })\n            }\n\n        </div>\n    )\n}","import React from \"react\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport Col from \"react-bootstrap/esm/Col\";\nimport Form from \"react-bootstrap/esm/Form\";\nimport Row from \"react-bootstrap/esm/Row\";\n\n\nfunction SizePriceForm(props:any){\n    return (\n        <Form.Group className=\"my-2\">\n            <Row className=\"g-3\">\n            <Col className=\"col-sm\"><Form.Control placeholder=\"Price\" value={props.price} onChange={e=>props.updatePrice(props.index,e.target.value)}/></Col>\n\n            <Col className=\"col-sm\"><Form.Control placeholder=\"Size\" value={props.size} onChange={e=>props.updateSize(props.index,e.target.value)}/></Col>\n            <Col className=\"col-sm\"><Button onClick={()=>{props.remove(props.index)}}>Remove</Button></Col>\n            </Row>\n        </Form.Group>\n    )\n\n}\n\nexport default function SizePriceListForm(props:any){\n    return(\n        <Form className=\"bg-white px-5 py-5 overflow-auto w-80 h-70 max-vh-20\">\n            {\n                props.sizePriceFormList.map((_:any,index:any)=>{\n                    return <SizePriceForm key={index} index={index} size={props.sizeList[index]} price={props.priceList[index]} remove={props.removeSizePriceForm} updateSize={props.updateSize} updatePrice={props.updatePrice}/>\n                })\n            }\n\n            <Button className=\"my-2\" onClick={()=>props.addSize()}>Add Size</Button>\n\n        </Form>\n    )\n}","import React, { useState } from 'react'\nimport { Container, Col, Row } from 'react-bootstrap'\nimport { createProduct } from '../../../Infrastructure/api/ProductApi'\nimport MainElementForm from '../../components/forms/MainElementForm'\nimport SizePriceListForm from '../../components/forms/SizePriceListForm'\nimport { Product } from '../../../Domain/catalogue/Types'\nimport { useAppDispatch } from '../../../Application/store/Hooks'\nimport { addProduct } from '../../../Application/store/reducers/ProductsReducer'\nimport { useNavigate, useParams } from 'react-router-dom'\n\n\nexport default function ProductCreator(){\n    const params = useParams()\n    const [ImageUrl , setImageUrl] = useState(\"\")\n    const [sizePriceFormList , setSizePriceFormList] = useState([0])\n    const dispatch = useAppDispatch()\n    const navigate = useNavigate()\n\n\n    const product:Product = {\n        Id : \"\",\n        Name : \"\",\n        ImageUrl : ImageUrl,\n        Description : \"\",\n        Price : [],\n        Size : [],\n        Index : -1\n    }\n   \n    function addSize(){\n        product.Price.push(\"\")\n        product.Size.push(\"\")\n        setSizePriceFormList(sizePriceFormList.concat([1]))\n    }\n\n    function updateSize(index:number,value:string){\n        product.Size[index] = value\n    }\n\n    function updatePrice(index:number,value:string){\n        product.Price[index] = value\n    }\n\n    function updateName(value:string){\n        product.Name = value\n        product.Id = value\n    }\n\n    function updateImageUrl(value:string){\n        setImageUrl(value) \n        product.ImageUrl=value\n    }\n\n    function updateDescription(value:string){\n        \n    }\n\n    function removeSizePriceForm(id:number){\n        product.Price.splice(id)\n        product.Size.splice(id)\n        setSizePriceFormList(sizePriceFormList.filter((item,index) => index!== id))\n    }\n\n\n    function save(){\n        createProduct({\n            product : product,\n            categoryId : params.categoryId!\n        },{\n            onSuccess: ()=>{\n                dispatch(addProduct({product:product,categoryKey:params.categoryId!}))\n                navigate(`/Category/${params.categoryId!}`,{replace:true})\n            },\n            onFail : (error) =>{console.log(error)}\n        })\n    \n    }\n\n    return (\n        <Container className=\"bg-white\">\n        <Row>\n\n        <Col>\n            <MainElementForm updateImageUrl={updateImageUrl} updateName={updateName} updateDescription={updateDescription} save={save}\n                ImageUrl={ImageUrl}\n            />\n        </Col>\n        \n        <Col>\n            <SizePriceListForm sizeList={product.Size} priceList={product.Price} sizePriceFormList={sizePriceFormList} removeSizePriceForm={removeSizePriceForm} addSize={addSize}\n                updatePrice={updatePrice} updateSize={updateSize}\n            />\n        </Col>\n\n        </Row>\n        </Container>\n    )\n}","import React, { useState } from 'react'\nimport Container from 'react-bootstrap/esm/Container'\nimport {Col, Row} from 'react-bootstrap'\nimport { updateProduct } from '../../../Infrastructure/api/ProductApi'\nimport { useAppDispatch, useAppSelector } from '../../../Application/store/Hooks'\nimport { updateProduct as update } from '../../../Application/store/reducers/ProductsReducer'\nimport MainElementForm from '../../components/forms/MainElementForm'\nimport SizePriceListForm from '../../components/forms/SizePriceListForm'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { CacheHelper } from '../../../Application/attributesCacher/CacheHelper'\n\n\nexport default function ProductEditor(){\n\n    const dispatch = useAppDispatch()\n    const params = useParams()\n    const product = useAppSelector(state=>state.product[params.categoryId!][parseInt(params.productId!)])\n    const navigate = useNavigate()\n    const [ImageUrl , setImageUrl] = useState(product.ImageUrl)\n    const [sizePriceFormList , setSizePriceFormList] = useState([0])\n    const [priceList , setPrice] = useState(product.Price)\n    const [sizeList ,setSize] = useState(product.Size)\n    const [name , setName] = useState(product.Name)\n    \n    CacheHelper.setTargetAttributes('Product')\n    \n    function addSize(){\n        setPrice(priceList.concat([\"\"]))\n        setSize(sizeList.concat([\"\"]))\n        setSizePriceFormList(sizePriceFormList.concat([1]))\n    }\n\n    function updateSize(index:number,value:string){\n        let temp = [...sizeList]\n        temp[index] = value\n        setSize(temp)\n        CacheHelper.cacheAttribute(\"Size\",temp)\n    }\n\n    function updatePrice(index:number,value:string){\n        let temp = [...priceList]\n        temp[index] = value\n        setPrice(temp)\n        CacheHelper.cacheAttribute(\"Price\",temp)\n    }\n\n    function updateName(value:string){\n        setName(value)\n        CacheHelper.cacheAttribute(\"Name\",value)\n    }\n\n    function updateImageUrl(value:string){\n        setImageUrl(value) \n        CacheHelper.cacheAttribute(\"ImageUrl\",value)\n    }\n\n    function updateDescription(value:string){\n        CacheHelper.cacheAttribute(\"Description\",value)\n    }\n\n    function removeSizePriceForm(id:number){\n        setPrice(priceList.filter((item: any,index: number) => index!==id))\n        setSize(sizeList.filter((item: any,index: number) => index!==id))\n        setSizePriceFormList(sizePriceFormList.filter((item,index) => index!== id))\n        CacheHelper.cacheAttribute(\"Price\",product.Price)\n        CacheHelper.cacheAttribute(\"Size\",product.Size)\n    }\n    \n    function save(){\n        updateProduct({\n            categoryId:params.categoryId!,\n            productId:product.Id,\n            updatedValues : CacheHelper.getCachedValues()\n        },{\n            onSuccess: ()=>{\n                dispatch(update({oldProduct:product,categoryKey:params.categoryId!,updatedValues:CacheHelper.getCachedValues()}))\n                CacheHelper.resetCache()\n                navigate(`/Category/${params.categoryId!}`,{replace:true})\n\n            },\n            onFail : (error) =>{\n                console.log(error)\n                CacheHelper.resetCache()\n            }\n        })\n    \n    }\n\n    return (\n        <Container className=\"bg-white\">\n        <Row>\n        <Col>\n            <MainElementForm name={name} description={product.Description} updateImageUrl={updateImageUrl} updateName={updateName} updateDescription={updateDescription} save={save}\n                ImageUrl={ImageUrl}\n            />\n        </Col>\n        \n        <Col>\n            <SizePriceListForm sizePriceFormList={sizePriceFormList} sizeList={sizeList} priceList={priceList} removeSizePriceForm={removeSizePriceForm} addSize={addSize}\n                updatePrice={updatePrice} updateSize={updateSize}\n            />\n        </Col>\n\n        </Row>\n        </Container>\n    )\n}","import React from \"react\"\nimport {Container, Nav,Navbar} from \"react-bootstrap\"\nimport { Link } from \"react-router-dom\";\nimport './SideNavBar.css'\n\nexport default function NavigationBar(){\n    return (\n    <Container fluid>\n      <Navbar id=\"NavBar\" bg=\"dark\" variant=\"dark\"  >\n      <Nav className=\"flex-column\">\n      <Nav.Link as={Link} to=\"/Orders\">Orders</Nav.Link>\n      <Nav.Link as={Link} to=\"/Catalogue\">Catalogue</Nav.Link>\n      <Nav.Link as={Link} to=\"/Settings\">Settings</Nav.Link>\n      </Nav>\n      </Navbar>\n    </Container>\n      \n    );\n}","import { Wrapper, Status } from \"@googlemaps/react-wrapper\";\nimport React, { ReactElement, useEffect, useRef } from \"react\";\n\nconst render = (status: Status): ReactElement => {\n    return <h3>{status} ..</h3>;\n  };\n  \nconst style = {height:'100vh'}\n\nfunction MyMapComponent({center ,zoom} : {center : google.maps.LatLngLiteral,zoom : number}){\n    const ref = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n      new window.google.maps.Map(ref.current!, {\n        center ,\n        zoom ,\n      });\n    });\n  \n    return <div ref={ref} style={style} id=\"map\" />;\n  }\n\n\nexport default function MapComponent(props :any){\n    return(\n        <Wrapper apiKey={\"AIzaSyBQb9BWP3LVE4eRRmFMC97MsFW1Qze-7j8\"} render={render}>\n            <MyMapComponent center={props.center}  zoom={props.zoom}/>\n        </Wrapper>\n    )\n}","import React from \"react\";\nimport { Card, Col, Container, Form, Row } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport MapComponent from \"../../components/map/Map\";\nimport { useAppSelector } from \"../../../Application/store/Hooks\";\n\nfunction OrderItemList(props:any){\n    return props.items.length > 0? (\n        <Container>\n            {props.items.map((value: any,index:any)=>{\n                return <OrderItem key={index} infos={value}></OrderItem>\n            })\n            }\n        </Container>\n    ) : (<Container></Container>)\n}\n\nfunction OrderItem(props:any){\n    console.log(props)\n    return (\n        \n        <Container>\n            <Row className=\"g-3\">\n                <Col className=\"col-sm-4\"><Form.Label>{props.infos.name}</Form.Label></Col>\n                <Col className=\"col-sm-3\"><Form.Label>X{props.infos.quantity}</Form.Label></Col>\n                <Col className=\"col-sm-3\"><Form.Label>{props.infos.price}</Form.Label></Col>\n            </Row>\n        </Container>\n    )\n}\n\nfunction OrderInfo(props:any){\n    return (\n        <Card>\n            <Card.Header>{props.id}</Card.Header>\n            <Card.Body>\n                <Card.Text>{props.order.FullName +'  -  '+ props.order.PhoneNumber}</Card.Text>\n                <Card.Text>{props.order.Address}</Card.Text>\n                <OrderItemList items={props.order.items}></OrderItemList>\n            </Card.Body>\n            <Card.Footer>Total Price : {totalPriceCalc(props.order.items)} Da</Card.Footer>\n        </Card>\n    )\n}\n\nfunction totalPriceCalc(items : Array<any>) : number{ \n    let priceTotal = 0\n    items.forEach((item) =>{\n        priceTotal += item.price * item.quantity\n    })\n    return priceTotal\n}\n\nexport default function OrderDetails(){\n    let params = useParams();\n    const order = useAppSelector(state=>state.order.orders[params.orderId!])\n    const zoom = 8\n    return (\n        <Container>\n            <Row className=\"g-3\">\n                <Col className=\"col-sm-5\"><OrderInfo order={order}></OrderInfo></Col>\n                <Col className=\"col-sm-5\"><MapComponent center={{lat:order.Latitude ,lng: order.Longitude}} zoom={zoom}></MapComponent></Col>\n            </Row>\n    \n        </Container>\n    )\n\n}","import {IDatabaseSynchroniser} from './IDatabaseSynchroniser'\nimport axios from \"axios\"\nimport { SynchroniseDatabaseApi,Callbacks } from '../api/ApiConfig'\nimport { AuthKey } from '../../Application/authentication/Authentication'\n\nfunction  synchroniseDatabase(callbacks : Callbacks){\n    axios.get(\n        SynchroniseDatabaseApi,\n        {\n        headers:{\"X-Auth-key\" : AuthKey}\n    })\n    .then(callbacks.onSuccess)\n    .catch(callbacks.onFail)\n}\n\nexport const DatabaseSynchroniser : IDatabaseSynchroniser = {\n    synchroniseDatabase: synchroniseDatabase,\n}\n\n\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Navigate } from \"react-router-dom\";\nimport { Authentication } from \"../../../Application/authentication/Authentication\";\nimport { DatabaseSynchroniser } from \"../../../Infrastructure/databaseSynchroniser/DatabaseSynchroniser\";\n\nexport default function SettingsBoard(props:any) {\n\n    return  (\n    <Container>\n        <button onClick={() =>{DatabaseSynchroniser.synchroniseDatabase({onSucess:()=>{},onFail:()=>{}})}} >Synchronise Database</button>\n    </Container>);\n        \n\n\n       \n    \n    \n}\n","import { Navigate, useLocation } from 'react-router-dom';\nimport { Authentication } from '../../../Application/authentication/Authentication';\nimport React from \"react\";\n\nexport default function PrivateRoutes ({ children }: { children: JSX.Element }) {\n  const location = useLocation();\n  if(Authentication.isLoggedIn()){\n    return children;\n\n  }\n  return (<Navigate to=\"/Login\" replace state={{ from: location }} />);\n}\n","import React from 'react';\nimport './Ui/styles/App.css';\nimport OrdersBoard from './Ui/pages/orders/OrdersBoard';\nimport { Route, Routes } from 'react-router-dom';\nimport Catalogue from './Ui/pages/catalogue/Catalogue';\nimport Login from './Ui/pages/authentication/Login';\nimport CategoryEdit from './Ui/pages/category/CategoryEdit';\nimport CategoryCreator from './Ui/pages/category/CategoryCreation';\nimport Category from './Ui/pages/catalogue/Category';\nimport ProductCreator from './Ui/pages/product/ProductCreator';\nimport ProductEditor from './Ui/pages/product/ProductEditor';\nimport NavigationBar from './Ui/components/navbar/SideNavBar';\nimport OrderDetails from './Ui/pages/orders/OrderDetails';\nimport SettingsBoard from './Ui/pages/settings/SettingsBoard';\nimport PrivateRoute from './Ui/components/auth/PrivateRoutes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <div className=\"App-header\">\n      <NavigationBar></NavigationBar>\n      </div>\n\n      <div className='App-body'>\n      <Routes>\n        <Route path =\"/Login\" element ={<Login />}/>\n        <Route path=\"/Orders\" element={<PrivateRoute><OrdersBoard/></PrivateRoute>} />\n        <Route path=\"/Catalogue\" element={<PrivateRoute><Catalogue/></PrivateRoute>} />\n        <Route path=\"/Category/:categoryId\" element={<PrivateRoute><Category/></PrivateRoute>} />\n\n        <Route path=\"/EditCategory/:categoryId\" element={<PrivateRoute><CategoryEdit/></PrivateRoute>}/>\n\n        <Route path=\"/CreateCategory\" element={<PrivateRoute><CategoryCreator/></PrivateRoute>}/>\n        <Route path=\"/CreateProduct/:categoryId\" element={<PrivateRoute><ProductCreator/></PrivateRoute>}/>\n\n        <Route path=\"/EditProduct/:categoryId/:productId\" element={<PrivateRoute><ProductEditor/></PrivateRoute>}/>\n        <Route path=\"/Settings\" element={<PrivateRoute><SettingsBoard/></PrivateRoute>} />\n        <Route path=\"/OrderDetails/:orderId\" element={<PrivateRoute><OrderDetails/></PrivateRoute>}/>\n        \n\n      </Routes>\n      </div>\n      \n      <link rel=\"stylesheet\"\n        href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\"\n        integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\"\n        crossOrigin=\"anonymous\"\n      />\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Ui/styles/index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport {Store} from './Application/store/Store'\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={Store}>\n    <App />\n    </Provider>\n  </BrowserRouter>,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}